/*
Checkbox (UI states)

Input checkbox user-interaction state.

Markup:
<div class="m-ip-checkbox">
    <input type="checkbox" class="m-ip-checkbox__input" id="my-checkbox">
    <label class="m-ip-checkbox__label {{modifier_class}}" for="my-checkbox" tabindex="0">Checkbox</label>
</div>

:focus - an element that received focus
:hover - an element with mouse-over state

Styleguide Checkbox.UIStates
*/
.m-ip-checkbox {
    --sprite-width: 72px;
    --sprite-height: 72px;
    --sprite-icon-size: 24px;

    &__input {
        display: none;
    }

    &__label {
        display: flex;
        position: relative;
        align-items: center;
        width: fit-content;
        outline: none;

        &::before {
            content: "";
            display: block;
            flex-shrink: 0;
            width: var(--sprite-icon-size);
            height: var(--sprite-icon-size);
            margin-inline-end: 8px;
            background-image: url('../../images/sprite-ip-ctrls.svg');
            background-position: 0 calc(-1 * var(--sprite-icon-size));
            background-size: var(--sprite-width) var(--sprite-height);
            cursor: pointer;
        }

        &:hover::before,
        &.pseudo-class-hover::before {
            background-position-x: calc(-1 * var(--sprite-icon-size));
        }

        &:focus::before,
        &.pseudo-class-focus::before {
            background-position-x: calc(-1 * var(--sprite-icon-size));
        }
    }

    &__input:disabled + &__label {
        color: var(--ip-placeholder-txt);
        opacity: 0.5;

        &::before {
            opacity: 0.5;
        }

        &:hover::before,
        &.pseudo-class-hover::before {
            background-position-x: 0;
        }

        &:focus::before,
        &.pseudo-class-focus::before {
            background-position-x: 0;
        }
    }

    &__input:checked + &__label {
        color: var(--ip-checked-txt);

        &::before {
            background-position-x: calc(-2 * var(--sprite-icon-size));
        }

        &:focus::before {
            background-position-x: calc(-2 * var(--sprite-icon-size));
        }
    }

    &--inline {
        display: inline-block;
        margin-inline-end: 20px;
    }
}

/*
Checkbox (inline)

Input checkbox displayed inline.

Markup:
<div class="m-ip-checkbox m-ip-checkbox--inline">
    <input type="checkbox" class="m-ip-checkbox__input" id="milk" name="milk">
    <label class="m-ip-checkbox__label" for="milk" tabindex="0">Milk</label>
</div>
<div class="m-ip-checkbox m-ip-checkbox--inline">
    <input type="checkbox" class="m-ip-checkbox__input" id="eggs" name="eggs">
    <label class="m-ip-checkbox__label" for="eggs" tabindex="0">Eggs</label>
</div>

Styleguide Checkbox.Inline
*/

/*
Checkbox (checked)

Input checkbox checked state.

Markup:
<div class="m-ip-checkbox">
    <input type="checkbox" class="m-ip-checkbox__input" id="my-checkbox" checked>
    <label class="m-ip-checkbox__label" for="my-checkbox" tabindex="0">Checkbox</label>
</div>

Styleguide Checkbox.Checked
*/

/*
Checkbox (disabled)

Inputheckbox disabled state.

Markup:
<div class="m-ip-checkbox">
    <input type="checkbox" class="m-ip-checkbox__input" id="disabled-checkbox" disabled>
    <label class="m-ip-checkbox__label" for="disabled-checkbox">Checkbox</label>
</div>

Styleguide Checkbox.Disabled
*/
